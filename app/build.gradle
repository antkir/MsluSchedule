plugins {
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    def versionMajor = 1
    def versionMinor = 2
    def versionPatch = 2
    def versionBuild = 2

    namespace 'by.ntnk.msluschedule'

    compileSdk 33
    buildToolsVersion "33.0.2"

    buildFeatures {
        buildConfig true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    lint {
        disable 'InvalidPackage', 'TrustAllX509TrustManager', 'OldTargetApi'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/CHANGES', 'META-INF/README.md', 'org/apache/**']
        }
    }
    defaultConfig {
        applicationId "by.ntnk.msluschedule"
        minSdk 16
        targetSdk 32
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true"
                ]
            }
        }
        resourceConfigurations += ["en", "be", "ru"]
    }
    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
        release {
            multiDexEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    appcompatVersion = '1.6.1'
    constraintlayoutVersion = '2.1.4'
    daggerVersion = '2.47'
    fragmentVersion = '1.6.1'
    jsoupVersion = '1.16.1'
    junitVersion = '4.13.2'
    leakcanaryVersion = '2.12'
    materialVersion = '1.9.0'
    mockitoVersion = '5.4.0'
    multidexVersion = '2.0.1'
    // OkHttp 3.13.0 release bumps minimum requirements to Android 5+.
    okhttpVersion = '3.12.13'
    // POI 4.0.0 release bumps minimum requirements to Android 5+.
    poiVersion = '3.17'
    preferenceVersion = '1.2.1'
    recyclerviewVersion = '1.3.1'
    // Retrofit 2.7.0 release bumps minimum requirements to Android 5+.
    retrofitVersion = '2.6.4'
    roomVersion = '2.5.2'
    rxandroidVersion = '2.1.1'
    // RxJava 3.1.0 release bumps minimum requirements to Android 5+.
    rxjavaVersion = '2.2.21'
    rxkotlinVersion = '2.4.0'
    spotlightVersion = '1.7.0'
    swiperefreshlayoutVersion = '1.1.0'
    threetenbpVersion = '1.6.8'
    timberVersion = '5.0.1'
    windowVersion = '1.1.0'

    crashlyticsVersion = '18.4.0'
    // Firebase Analytics 20.0.0+ release bumps minimum requirements to Android 4.4+.
    firebaseanalyticsVersion = '19.0.2'
}

dependencies {
    // AndroidX libraries
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayoutVersion"
    implementation "androidx.window:window:$windowVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    // Jsoup
    implementation "org.jsoup:jsoup:$jsoupVersion"
    // Material Components
    implementation "com.google.android.material:material:$materialVersion"
    // Okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    // Poi
    implementation "org.apache.poi:poi:$poiVersion"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    // RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"
    // Spotlight
    implementation "com.github.takusemba:spotlight:$spotlightVersion"
    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"
    // Time
    implementation "org.threeten:threetenbp:$threetenbpVersion:no-tzdb"
    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    // Testing
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "junit:junit:$junitVersion"
    // Firebase
    implementation "com.google.firebase:firebase-analytics-ktx:$firebaseanalyticsVersion"
    implementation "com.google.firebase:firebase-crashlytics-ktx:$crashlyticsVersion"
}
