apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    def versionMajor = 1
    def versionMinor = 1
    def versionPatch = 1
    def versionBuild = 0
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'InvalidPackage', 'TrustAllX509TrustManager', 'OldTargetApi'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        exclude 'META-INF/CHANGES'
        exclude 'META-INF/README.md'
        exclude 'org/apache/**'
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "by.ntnk.msluschedule"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
            }
        }
    }
    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
        release {
            multiDexEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    androidxVersion = '1.2.0'
    androidxPreferenceVersion = '1.1.1'
    constraintlayoutVersion = '2.0.2'
    daggerVersion = '2.29.1'
    jsoupVersion = '1.13.1'
    junitVersion = '4.13'
    leakcanaryVersion = '2.5'
    materialVersion = '1.2.1'
    mockitoVersion = '3.5.11'
    multidexVersion = '2.0.1'
    // OkHttp 3.13.0 release bumps minimum requirements to Java 8+ or Android 5+.
    // 3.12.x branch will receive critical fixes through December 31, 2020.
    okhttpVersion = '3.12.12'
    // POI 4.0.0 release bumps minimum requirements to Java 8+ or Android 5+.
    poiVersion = '3.17'
    // Retrofit 2.7.0 release bumps minimum requirements to Java 8+ or Android 5+.
    retrofitVersion = '2.6.4'
    roomVersion = '2.2.5'
    rxandroidVersion = '2.1.1'
    rxjavaVersion = '2.2.20'
    rxkotlinVersion = '2.4.0'
    spotlightVersion = '1.7.0'
    swipeRefreshLayoutVersion = '1.1.0'
    threetenbpVersion = '1.4.5'
    timberVersion = '4.7.1'

    crashlyticsVersion = '17.2.2'
    firebaseVersion = '17.5.1'
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Support libraries
    implementation "androidx.appcompat:appcompat:$androidxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.preference:preference:$androidxPreferenceVersion"
    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    // Jsoup
    implementation "org.jsoup:jsoup:$jsoupVersion"
    // Okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    // Poi
    implementation "org.apache.poi:poi:$poiVersion"
    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    // RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"
    // Spotlight
    implementation "com.github.takusemba:spotlight:$spotlightVersion"
    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"
    // Time
    implementation "org.threeten:threetenbp:$threetenbpVersion:no-tzdb"
    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    // Testing
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "junit:junit:$junitVersion"

    // Firebase Core
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
    // Crashlytics
    implementation "com.google.firebase:firebase-crashlytics:$crashlyticsVersion"
}
